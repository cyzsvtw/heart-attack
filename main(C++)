#include <bits/stdc++.h>
#include <windows.h>
#include <conio.h>
using namespace std;
void endgame(int score1,int score2)//when the deck has no cards,end the game
{
   cout<<"gameover"<<endl;
   //compare score1 to score2
   if(score1>score2)
   {
       cout<<"player1 win!\n";
   }
   else if(score1<score2)
   {
       cout<<"player2 win!\n";
   }
   else
   {
       cout<<"it's a tie\n";
   }
   system("pause");
   exit(1);
}
bool gamestart(string startgame)
{
  //press s to start the game
        cout<<"press s to start";
        cin>>startgame;
        if(startgame=="s")
        {
          return true;
        }
        else
        {
            return false;
        }
}
void printscore(int score1,int score2)//print p1 and p2's score
{
   cout<<"player1:"<<score1<<"\tplayer2:"<<score2<<endl;
}
int main() {
int score1=0,score2=0,score;
//build the deck
vector <vector <int> > poker;
vector<int> spade;
vector<int> heart;
vector<int> dimond;
vector<int> club;
poker.push_back(spade);
poker.push_back(heart);
poker.push_back(club);
poker.push_back(dimond);
//input cards
for(int j=0;j<4;j++)
    {
        for(int i=1;i<=13;i++)
        {
            poker[j].push_back(i);
        }
    }
poker[3].push_back(0);//this is the special card.the game start with this card (it would not participate the game)
srand((unsigned)time(NULL));
int Type=4,num=14;//set the special card as first card
string startgame;
int leftcard=52;//when leftcard==0,end the game
  while(gamestart(startgame)==false)
    {
     system("cls");
    }
system("cls");
printscore(score1,score2);//print the initial score
int count1=0;//count from 1-13
char kb;
while(1)
{

    while(kbhit());//while keyboard has been hit
    {
        kb=getch();
        if(kb==' ')
        {
            if(leftcard==0)//check if the card in the deck is zero
                {
                    endgame(score1,score2);
                }
            leftcard--;

            poker[Type-1][num-1]=0;//the card has been used will became zero
            flag:
            Type=rand()%4+1;//random type
            num=rand()%13+1;//random number
            if(poker[Type-1][num-1]==0) goto flag;
            if(count1!=13) count1++;
            else count1=1;
            score++;
            switch (Type)
            {
                case 1:
                {
                    cout<<"spade  "<<poker[Type-1][num-1]<<"\t"<<count1<<endl;
                    break;
                }
                case 2:
                {
                    cout<<"heart  "<<poker[Type-1][num-1]<<"\t"<<count1<<endl;
                    break;
                }
                case 3:
                {
                    cout<<"club   "<<poker[Type-1][num-1]<<"\t"<<count1<<endl;
                    break;
                }
                case 4:
                {
                    cout<<"dimond "<<poker[Type-1][num-1]<<"\t"<<count1<<endl;
                    break;
                }
            }

        }
        else if(kb=='a')
        {
            Sleep(500);//prevent hitting keyboard frequent
            if(count1==poker[Type-1][num-1])//if correct,plus point
            {
                score1+=score;
                count1=0;
                score=0;
                system("pause");
                system("cls");
                printscore(score1,score2);
            }
        else//if wrong, minus point
        {
            score1-=score;
            count1=0;
            score=0;
            system("pause");
            system("cls");
            printscore(score1,score2);
        }

    }
    else if(kb=='l')//same as kb=='a'
        {
            Sleep(500);
            if(count1==poker[Type-1][num-1])
            {

                score2+=score;
                count1=0;
                score=0;
                system("pause");
                system("cls");
                printscore(score1,score2);
            }
            else
            {
                score2-=score;
                count1=0;
                score=0;
                system("pause");
                system("cls");
                printscore(score1,score2);
            }

        }
    }
}

}
